{
  "name": "My workflow 4",
  "nodes": [
    {
      "parameters": {},
      "id": "f26f8e3e-156a-4506-923e-2ce440fe0f22",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        260,
        280
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "17fbdf76-4ab6-48a0-946f-5d226b3587ee",
              "name": "=table",
              "type": "string",
              "value": "={{ $('Edit Fields6').item.json.table_name }}"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "2fe797b6-3017-454b-a0cf-9aad053bac36",
      "name": "Edit Fields4",
      "type": "n8n-nodes-base.set",
      "position": [
        1140,
        280
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "operation": "toJson",
        "options": {
          "fileName": "model_mysql.json"
        }
      },
      "id": "3f3d7c16-68c1-4cd5-8e8d-d9873358dfc1",
      "name": "Convert to File1",
      "type": "n8n-nodes-base.convertToFile",
      "position": [
        1580,
        280
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "./model_mysql.json",
        "options": {
          "append": false
        }
      },
      "id": "10bedc29-e05b-4ec9-a3c5-abef67a1e2e6",
      "name": "Read/Write Files from Disk4",
      "type": "n8n-nodes-base.readWriteFile",
      "position": [
        1800,
        280
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "const result = {};\nconst properties_model = $('Edit Fields4').all();\n\nfor(const property of properties_model){\n  const table = property.json.table;\n\n  if (!result[table]) {\n    result[table] = [];\n  }\n\n  result[table].push({\n    field: property.json.Field,\n    type: property.json.Type,\n    nullable: property.json.Null,\n    key: property.json.Key,\n    default: property.json.Default,\n    extra: property.json.Extra\n  });\n};\n\nreturn result;"
      },
      "id": "a1afcf55-c75a-4417-aeb6-c2fd6093d2ed",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "position": [
        1360,
        280
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7a6c1a5f-c34c-4d90-b86b-0ae77eab1eaa",
              "name": "table_name",
              "type": "string",
              "value": "={{ $json.Tables_in_olympus_barberia }}"
            }
          ]
        },
        "includeOtherFields": true,
        "include": "selected",
        "includeFields": "={{ $json.Tables_in_olympus_barberia }}",
        "options": {}
      },
      "id": "c0eba596-8ae3-4e3a-bd9c-f324212454ba",
      "name": "Edit Fields6",
      "type": "n8n-nodes-base.set",
      "position": [
        700,
        280
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SHOW TABLES",
        "options": {}
      },
      "id": "56c400cc-93c3-435c-95df-ac298344841b",
      "name": "Show Tables",
      "type": "n8n-nodes-base.mySql",
      "position": [
        480,
        280
      ],
      "typeVersion": 2.4,
      "credentials": {
        "mySql": {
          "id": "k4Hu8eBhSxxOudja",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DESCRIBE {{ $json.table_name }}",
        "options": {}
      },
      "id": "07340cf3-9636-4411-bdff-b20bc56751c0",
      "name": "Describe Tables2",
      "type": "n8n-nodes-base.mySql",
      "position": [
        920,
        280
      ],
      "typeVersion": 2.4,
      "credentials": {
        "mySql": {
          "id": "k4Hu8eBhSxxOudja",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Generate model database file\n## More efficient for workflow, don't necessarily make a query to retrieve the schema\n\n",
        "height": 460,
        "width": 1920,
        "color": 6
      },
      "id": "2ac61dfa-1198-4108-a1d8-f8d29261a976",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        140,
        100
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "60cd4390-227f-43d9-b001-e588fe8e1595",
              "name": "schema",
              "type": "string",
              "value": "={{ $json.data }}"
            },
            {
              "id": "62e1b7aa-2637-4693-a6a5-659f08ee8c51",
              "name": "sessionId",
              "type": "string",
              "value": "={{ $('Webhook2').item.json.body.from }}"
            },
            {
              "id": "96f31142-2caf-484c-9a1c-1707ed521350",
              "name": "chatInput",
              "type": "string",
              "value": "={{ $('Merge').item.json.chatInput }}"
            }
          ]
        },
        "options": {}
      },
      "id": "1a979028-5429-4e34-b73b-b28fc3cb2359",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "position": [
        1120,
        1520
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "operation": "fromJson",
        "options": {}
      },
      "id": "8ad815ac-9d80-4ec3-9400-df0a70a21960",
      "name": "Extract from File",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        920,
        1520
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "fileSelector": "./model_mysql.json",
        "options": {}
      },
      "id": "b3aae63c-a584-44af-a653-c5c57b949e42",
      "name": "Read/Write Files from Disk",
      "type": "n8n-nodes-base.readWriteFile",
      "position": [
        700,
        1520
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "table": {
          "__rl": true,
          "mode": "list",
          "value": "clientes",
          "cachedResultName": "clientes"
        },
        "dataMode": "defineBelow",
        "valuesToSend": {
          "values": [
            {
              "column": "nombre",
              "value": "={{ $fromAI(\"nombre\", \"nombre y apellido\") }}"
            },
            {
              "column": "correo",
              "value": "={{ $fromAI(\"correo\", \"correo del usuario\") }}"
            },
            {
              "column": "telefono",
              "value": "={{ $fromAI(\"telefono\",\"numero de telefono\") }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a2af4548-9def-400d-8f6a-774a408ac45f",
      "name": "Insertar Cliente",
      "type": "n8n-nodes-base.mySqlTool",
      "position": [
        2340,
        1760
      ],
      "typeVersion": 2.4,
      "credentials": {
        "mySql": {
          "id": "k4Hu8eBhSxxOudja",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "efac56c4-fe10-4448-862c-396e3145fb10/webhook/whatsapp",
        "options": {}
      },
      "id": "86eedcb2-c86c-4e99-94ee-4eab3f79454f",
      "name": "Webhook2",
      "type": "n8n-nodes-base.webhook",
      "position": [
        -80,
        1520
      ],
      "webhookId": "efac56c4-fe10-4448-862c-396e3145fb10",
      "typeVersion": 2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://host.docker.internal:3001/send-message",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "=to",
              "value": "={{ $('Webhook2').item.json.body.from }}"
            },
            {
              "name": "message",
              "value": "={{ $json.output }}"
            },
            {
              "name": "=fromMe",
              "value": "={{ $('Webhook2').item.json.body.raw.key.fromMe }}"
            },
            {
              "name": "from",
              "value": "={{ $('Webhook2').item.json.body.from }}"
            }
          ]
        },
        "options": {}
      },
      "id": "157860b8-2800-4140-b090-6e5de03f027e",
      "name": "HTTP Request6",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        2380,
        1520
      ],
      "typeVersion": 4.2,
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "select",
        "table": {
          "__rl": true,
          "mode": "list",
          "value": "clientes",
          "cachedResultName": "clientes"
        },
        "where": {
          "values": [
            {
              "column": "telefono",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('values0_Value', `identificador del chat`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "18c5380c-ce7f-48c5-a989-427918152242",
      "name": "Seleccionar Cliente",
      "type": "n8n-nodes-base.mySqlTool",
      "position": [
        2160,
        1760
      ],
      "typeVersion": 2.4,
      "credentials": {
        "mySql": {
          "id": "k4Hu8eBhSxxOudja",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "table": {
          "__rl": true,
          "mode": "list",
          "value": "barberos",
          "cachedResultName": "barberos"
        },
        "returnAll": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Return_All', ``, 'boolean') }}",
        "options": {}
      },
      "id": "8b3416de-1c69-4356-b889-04235b18a3a2",
      "name": "Seleccionar Barbero",
      "type": "n8n-nodes-base.mySqlTool",
      "position": [
        2360,
        1940
      ],
      "typeVersion": 2.4,
      "credentials": {
        "mySql": {
          "id": "k4Hu8eBhSxxOudja",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "{{ $fromAI(\"consulta_sql\", \"Consulta sql en base a las necesidades del agente\") }}",
        "options": {}
      },
      "id": "f6645ec1-84bd-45c8-b71a-c55d39398d54",
      "name": "Consultar en Base de Datos",
      "type": "n8n-nodes-base.mySqlTool",
      "position": [
        1980,
        1760
      ],
      "typeVersion": 2.4,
      "credentials": {
        "mySql": {
          "id": "k4Hu8eBhSxxOudja",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "table": {
          "__rl": true,
          "mode": "list",
          "value": "servicios",
          "cachedResultName": "servicios"
        },
        "returnAll": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Return_All', ``, 'boolean') }}",
        "options": {}
      },
      "id": "cc5d01c2-f59d-4372-aa6b-38031d1adfa7",
      "name": "Buscar Servicios",
      "type": "n8n-nodes-base.mySqlTool",
      "position": [
        2160,
        1940
      ],
      "typeVersion": 2.4,
      "credentials": {
        "mySql": {
          "id": "k4Hu8eBhSxxOudja",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "table": {
          "__rl": true,
          "mode": "list",
          "value": "citas",
          "cachedResultName": "citas"
        },
        "dataMode": "defineBelow",
        "options": {}
      },
      "id": "9877af90-35c1-4d18-a0e7-6fa3f9eb36d5",
      "name": "Insertar Citas",
      "type": "n8n-nodes-base.mySqlTool",
      "position": [
        1980,
        1940
      ],
      "typeVersion": 2.4,
      "credentials": {
        "mySql": {
          "id": "k4Hu8eBhSxxOudja",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash-preview-05-20",
        "options": {}
      },
      "id": "0c929053-e226-4973-b87b-4c6b181ca8ba",
      "name": "Google Gemini Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        1740,
        1720
      ],
      "typeVersion": 1,
      "credentials": {
        "googlePalmApi": {
          "id": "DWXCpnS9wGemeHjd",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "mode": "list",
          "value": "9epx8Hjo2nScFajU",
          "cachedResultName": "My Sub-Workflow 1"
        },
        "workflowInputs": {
          "value": {},
          "schema": [],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "id": "85f39ec3-a916-4cee-8385-74b320fc8581",
      "name": "Call n8n Workflow Tool",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        3800,
        260
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "mode": "list",
          "value": "9epx8Hjo2nScFajU",
          "cachedResultName": "My Sub-Workflow 1"
        },
        "workflowInputs": {
          "value": {},
          "schema": [],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "id": "06826cc0-a79f-406e-b899-8d5cb432b964",
      "name": "Execute Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "position": [
        3460,
        260
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "fileSelector": "./model_mysql.json",
        "options": {}
      },
      "id": "62fc93b9-c4c6-4f15-af3d-81a000a21410",
      "name": "Read/Write Files from Disk3",
      "type": "n8n-nodes-base.readWriteFile",
      "position": [
        2780,
        260
      ],
      "typeVersion": 1,
      "disabled": true
    },
    {
      "parameters": {
        "operation": "fromJson",
        "options": {}
      },
      "id": "0b717d3b-8c42-4f6d-bb18-98b38990a9dc",
      "name": "Extract from File2",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        3000,
        260
      ],
      "typeVersion": 1,
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "60cd4390-227f-43d9-b001-e588fe8e1595",
              "name": "schema",
              "type": "string",
              "value": "={{ $json.data }}"
            },
            {
              "id": "c43be3c8-2314-4ea0-9467-96a48e81a90a",
              "name": "chatInput",
              "type": "string",
              "value": "={{ $('Webhook').item.json.body.raw.message.extendedTextMessage.text }}"
            },
            {
              "id": "62e1b7aa-2637-4693-a6a5-659f08ee8c51",
              "name": "sessionId",
              "type": "string",
              "value": "={{ $('Webhook').item.json.body.from }}"
            },
            {
              "id": "f132adc0-5023-40d3-986b-58a2f52247d5",
              "name": "userPushName",
              "type": "string",
              "value": "={{ $('Webhook').item.json.body.raw.pushName }}"
            }
          ]
        },
        "options": {}
      },
      "id": "917b9d72-0ad8-4bab-98eb-dc0225b74261",
      "name": "Edit Fields3",
      "type": "n8n-nodes-base.set",
      "position": [
        3220,
        260
      ],
      "typeVersion": 3.4,
      "disabled": true
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{('Switch')}}",
        "contextWindowLength": 20
      },
      "id": "49a7c4d6-2f87-45bb-ae9e-3fdc5c684253",
      "name": "Simple Memory2",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        1640,
        1960
      ],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "9cdd8594-0530-4a8e-a3dd-eb54dd00b87a",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "Conversación general"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "General"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "24bc64a3-5a0d-42f7-8fb4-f95ddd621ecf",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "Consulta de datos"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Datos"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "952faa3a-b7e1-4224-9bcd-9839de22f6b4",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "Caso raro"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Raro"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "89e8c82b-7e54-49d5-b867-11ef43b3ab23",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "Agendar cita"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Cita"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "c17ec4c8-ea6e-453c-95d2-5686b3498295",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "Registro cliente"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Registro cliente"
            }
          ]
        },
        "options": {}
      },
      "id": "99d5f00c-2d86-460d-906a-e66d6982d9c0",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "position": [
        2280,
        280
      ],
      "typeVersion": 3.2,
      "disabled": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=mensaje del usuario: \"{{ $json.chatInput }}\"",
        "options": {
          "systemMessage": "=Eres un asistente experto en clasificar mensajes de usuarios recibidos a través de WhatsApp para un agente de ventas automatizado. Tu tarea es analizar el mensaje del usuario y clasificarlo en una de las siguientes categorías:\n\n- Consulta de datos: El mensaje solicita información específica que requiere una consulta a una base de datos (por ejemplo, precios, stock, detalles de productos o clientes). Ejemplos: \"Dime el precio del producto X\", \"¿Cuánto stock queda de Y?\", \"Busca el email de Juan Pérez\".\n\n- Conversación general: El mensaje es una interacción genérica, como saludos, agradecimientos o preguntas no relacionadas con datos específicos. Ejemplos: \"Hola, ¿cómo estás?\", \"Gracias por la info\", \"¿En qué me puedes ayudar?\".\n\n- Caso raro: El mensaje es irrelevante, ambiguo, contiene solo emojis, o no encaja en las otras categorías. Ejemplos: \"😊👍\", \"Ok\", \"jajaja\".\n\n- Agendar cita o servicio: El mensaje del usuario incluye expresiones como “Quiero una cita”, “Agendar cita”, “Reservar”, “¿Puedo agendar?”, \"Quiero una cita\", etc., clasifícalo en una categoría “Agendar cita”.\n\n- Registro de Usuario: El mensaje del usuario contiene su nombre y correo que se pide para su registro: \"Me llamo Juan, juan@gmail.com\", \"Karolina, karo123@hotmail.com\", \"Mi nombre es Jhustyn, y mi correo es jhustyncarvajal@gmail.com\", etc.\nclasifícalo en una categoría “Registro cliente” siempre y cuando el menasje no contenga algun contexto más especifico antes de los datos mencionados, ejm: \"Me encanta su barberia soy Jhustyn el que fue el otro dia para un corte\" o \"No me gusot el servico soy Juan y su barbero me lastimo\".\n\nInstrucciones:\n\n1. Analiza el mensaje del usuario tomando encuenta los mensajes anteriores para mantener coherencia en la cenversación.\n\n2. Devuelve únicamente el nombre de la categoría en texto plano (sin explicaciones ni formato adicional):\n   - Consulta de datos\n   - Conversación general\n   - Caso raro\n   - Agendar cita\n   - Registro cliente"
        }
      },
      "id": "37e4fd5e-a7b3-4046-b45d-89213d09cd39",
      "name": "Clasificación de intenciones",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        1340,
        1520
      ],
      "typeVersion": 1.9
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash-preview-05-20",
        "options": {}
      },
      "id": "5c27f4bf-a02a-47e0-8135-b728c1900b12",
      "name": "Google Gemini Chat Model4",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        1340,
        1740
      ],
      "typeVersion": 1,
      "credentials": {
        "googlePalmApi": {
          "id": "DWXCpnS9wGemeHjd",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "efac56c4-fe10-4448-862c-396e3145fb10/webhook/whatsapp",
        "options": {}
      },
      "id": "6f2f4ad4-828d-4d69-9417-cfd045085710",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "position": [
        2580,
        260
      ],
      "webhookId": "efac56c4-fe10-4448-862c-396e3145fb10",
      "typeVersion": 2,
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "ef4e42e2-b458-4659-942d-058ca9ae3031",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        1860,
        960
      ],
      "typeVersion": 3,
      "disabled": true
    },
    {
      "parameters": {
        "content": "# Para reponder a mensajas tipo:\n\n## Permiteme un momento para confirmar la disponibilidad\n\n## Como ultima opción eliminar esas interacciones",
        "height": 480,
        "width": 1520
      },
      "id": "2959d63a-f745-40d7-a72f-6a9f32735419",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1020,
        740
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "bfd9d9e9-13c3-4a52-b114-2bc2f1b9007c",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "position": [
        1600,
        960
      ],
      "typeVersion": 3.4,
      "disabled": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.output }}",
        "options": {}
      },
      "id": "eab6886d-baf9-47e5-a8cb-c7990871c596",
      "name": "AI Agent1",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        2180,
        980
      ],
      "typeVersion": 1.9,
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "63c99b0a-369b-400c-ad37-b05c304d15ba",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              },
              "leftValue": "={{ $json.body.raw.message.conversation }}",
              "rightValue": ""
            },
            {
              "id": "0ed8856f-7b73-4542-8f5f-8bf76fa8f411",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "31a8272c-c08b-4860-be49-9d9b29e5cbcb",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "position": [
        80,
        1420
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "ad05ed2f-565f-4129-93e7-992200cd15c7",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              },
              "leftValue": "={{ $json.body.raw.message.extendedTextMessage.text }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "381a8c59-f9bc-4d4e-bb5f-ebdbd45bece6",
      "name": "If1",
      "type": "n8n-nodes-base.if",
      "position": [
        80,
        1600
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b69abbcc-c14b-40af-a4bd-77892b537337",
              "name": "chatInput",
              "type": "string",
              "value": "={{ $json.body.raw.message.conversation }}"
            }
          ]
        },
        "options": {}
      },
      "id": "476c2314-0b3e-4427-ba66-6f8582e747bc",
      "name": "Edit Fields2",
      "type": "n8n-nodes-base.set",
      "position": [
        300,
        1400
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b69abbcc-c14b-40af-a4bd-77892b537337",
              "name": "chatInput",
              "type": "string",
              "value": "={{ $json.body.raw.message.extendedTextMessage.text }}"
            }
          ]
        },
        "options": {}
      },
      "id": "7b148b25-5ecd-418d-b64c-4d4a85a8f9eb",
      "name": "Edit Fields5",
      "type": "n8n-nodes-base.set",
      "position": [
        300,
        1580
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {},
      "id": "3d808926-5115-42ee-94ca-8cac891a6b84",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "position": [
        460,
        1520
      ],
      "typeVersion": 3.1
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "eade6c8f-8e6c-4f16-9785-74150f942063",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              },
              "leftValue": "={{ $json.body.raw.message.extendedTextMessage.text }}",
              "rightValue": ""
            },
            {
              "id": "d54f8ca2-d00b-4a8f-aa9d-4421a012232d",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              },
              "leftValue": "={{ $json.body.raw.message.conversation }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "fbba41c9-4423-4c08-8dc8-867281c3f8d6",
      "name": "If2",
      "type": "n8n-nodes-base.if",
      "position": [
        300,
        1840
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://host.docker.internal:3001/send-message",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "=to",
              "value": "={{ $('Webhook2').item.json.body.from }}"
            },
            {
              "name": "message",
              "value": "=Tenemos incovenientes con la recepción de tus mensajes intentalo más luego"
            },
            {
              "name": "=fromMe",
              "value": "={{ $('Webhook2').item.json.body.raw.key.fromMe }}"
            },
            {
              "name": "from",
              "value": "={{ $('Webhook2').item.json.body.from }}"
            }
          ]
        },
        "options": {}
      },
      "id": "470ca869-ba5b-42b4-b382-0fe3ae2ebaee",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        560,
        1820
      ],
      "typeVersion": 4.2,
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Mensaje del usuario: {{ $('Edit Fields').item.json.chatInput }}\nIntecion del Usuario: {{ $json.output }}\nTelefono del usuario: {{ $('Edit Fields').item.json.sessionId.match(/\\d+/g || \"\") }}\nFecha actual: {{ $now.format('yyyy-MM-dd') }}",
        "options": {
          "systemMessage": "=Rol\n\nEres un asistente de IA para una barbería, encargado de gestionar citas, agendaciones y clientes de manera clara, eficaz y profesional. Tu objetivo es asegurar que las citas se creen, modifiquen o cancelen correctamente, y que los datos de los clientes se manejen con precisión, proporcionando respuestas amigables y atractivas para los clientes.\nSi necesitas información sobre un barbero específico, utiliza la herramienta Seleccionar Barbero para obtener detalles relevantes.\nSi necesitas información sobre un servicio específico, utiliza la herramienta Seleccionar Servicio para obtener detalles como nombre, descripción y precio.\n\nTarea\nGestión de Clientes\n\nVerifica si el cliente está registrado en la base de datos usando la herramienta Seleccionar Cliente.\nSi no está registrado, valida los datos proporcionados:\nNombre: Debe contener solo letras, espacios, guiones o apóstrofes (por ejemplo, \"Juan Pérez\"). Usa la regex ^[A-Za-z\\s\\-\\']+$.\nCorreo: Debe seguir el formato estándar de email (por ejemplo, \"nombre@dominio.com\"). Usa la regex ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$.\nTeléfono: Debe ser único y contener un código de país (por ejemplo, \"+593999898554\") seguido de 10 a 15 dígitos. Usa la regex ^\\+\\d{10,15}$.\n\n\nRegistra los datos validados usando la herramienta Insertar Cliente. Si los datos no cumplen con los formatos, devuelve un mensaje claro y amigable, como:\n\"¡Hola! Parece que los datos no están en el formato correcto. Por favor, usa solo letras y espacios para el nombre (por ejemplo, 'Juan Pérez'), un correo válido (por ejemplo, 'juan@ejemplo.com'), y un teléfono con código de país (por ejemplo, '+593999898554'). ¿Puedes verificar los datos?\"\n\n\nSi el cliente se registra correctamente, devuelve un mensaje como:\n\"¡Bienvenido a Olympus Barbería! Tus datos han sido registrados con éxito. ¿Listo para agendar tu cita?\"\n\n\nSi se solicita actualizar el correo de un cliente, utiliza la herramienta Seleccionar Cliente para confirmar que el cliente existe. Valida el nuevo correo con la regex ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$ y actualiza el registro usando Consultar en Base de Datos con una consulta como:UPDATE clientes SET correo = :nuevo_correo WHERE id = :cliente_id;\n\n\nSi la actualización es exitosa, devuelve:\n\"¡Listo! Tu correo ha sido actualizado a :nuevo_correo. ¿En qué más te ayudamos?\"\n\n\nSi el correo no es válido, devuelve:\n\"Lo sentimos, el correo proporcionado no es válido. Por favor, usa un formato como 'nombre@dominio.com'.\"\n\n\n\n\n\nEliminación de Clientes\n\nSi se solicita eliminar un cliente, utiliza la herramienta Seleccionar Cliente para confirmar que el cliente existe en la tabla clientes (por nombre, teléfono o correo).\nAntes de eliminar, verifica con Consultar en Base de Datos si el cliente tiene citas asociadas en la tabla citas. Procede con la eliminación usando una consulta SQL en Consultar en Base de Datos, como:DELETE FROM clientes WHERE id = :cliente_id;\n\n\nDespués de la eliminación, confirma con Consultar en Base de Datos que el cliente y sus citas asociadas (debido a la restricción ON DELETE CASCADE) ya no existen. Devuelve un mensaje como:\n\"¡Listo! El cliente ha sido eliminado de nuestros registros, junto con sus citas. Si necesitas algo más, estamos aquí para ayudarte.\"\n\n\n\nGestión de Citas\n\nIf a specific service is requested, use the Seleccionar Servicio tool to retrieve the full list of services and their details. Try to infer which service is meant (by name, description, or keywords) and verify it is valid according to the servicios table. If the service is valid, return a message like:\n\"¡Perfecto! Has seleccionado el servicio :nombre_servicio por $:precio. ¿Cuándo te vendría bien agendarlo?\"\nIf the service is not found, return:\n\"Lo sentimos, no encontramos el servicio solicitado. ¿Quizás quisiste decir 'Corte de cabello clásico'? Aquí tienes algunos servicios disponibles: [lista de servicios].\"\n\n\n\n\nIf a specific barber is requested, always use the Seleccionar Barbero tool to retrieve the full list of barbers and their details. Try to infer which barber is meant by:\nCase-insensitive name comparison.\nPartial name matches (e.g., \"Juan\" could match \"Juan García\").\nCommon typos (e.g., \"Jon\" instead of \"John\").\n\n\nIf no exact or approximate match is found for the barber, select an available barber who meets the service requirements and return a message like:\n\"No encontramos a ':nombre_ingresado', pero :nombre_barbero está disponible y es experto en este servicio. ¿Te parece bien?\"\n\n\nTo create a new appointment, use the Inserción Citas tool with extreme care:\nBefore insertion: Verify that:\nThe client, service, and barber are valid using Seleccionar Cliente, Seleccionar Servicio, and Seleccionar Barbero.\nThe date and time are within the barbershop's operating hours (10:00 AM to 6:30 PM) and not in the past.\nThere are no schedule conflicts using Consultar en Base de Datos with a query like:SELECT * FROM citas WHERE barbero_id = :barbero_id AND fecha = :fecha AND hora = :hora;\n\n\nIf there is a conflict or the time is invalid, return a message like:\n\"¡Vaya! El horario solicitado (:hora el :fecha) no está disponible para :nombre_barbero. ¿Qué tal otro horario, como :hora_alternativa?\"\n\n\n\n\nInsertion: Use Inserción Citas to register the appointment in the citas table, ensuring the data complies with foreign key and data type constraints.\nAfter insertion: Verify twice with Consultar en Base de Datos that the appointment was created correctly, confirming that the data (cliente_id, servicio_id, barbero_id, fecha, hora, estado) matches the request. Return a message like:\n\"¡Tu cita está confirmada! 📅 Te esperamos el :fecha a las :hora con :nombre_barbero para un :nombre_servicio. ¡Gracias por elegir Olympus Barbería!\"\nIf there is an error, return:\n\"Lo sentimos, hubo un problema al crear tu cita. ¿Puedes intentar con otro horario o barbero?\"\n\n\n\n\n\n\nTo modify or cancel appointments, use Consultar en Base de Datos with appropriate SQL queries, ensuring consistency with the clientes, servicios, barberos, and citas tables. Return messages like:\nModification: \"¡Cita actualizada! Ahora tienes una cita el :fecha a las :hora con :nombre_barbero.\"\nCancellation: \"Tu cita ha sido cancelada con éxito. ¡Esperamos verte pronto!\"\n\n\n\nConsulta de Información\n\nUse the Seleccionar Servicio tool to retrieve specific service details (names, descriptions, prices). Return a message like:\n\"¡Estos son nuestros servicios! 💈 Por ejemplo, :nombre_servicio ($:precio): :descripcion. ¿Cuál te interesa?\"\n\n\nUse the Seleccionar Barbero tool to check barber availability or specialties. Return a message like:\n\"¡Conoce a nuestros barberos! 💪 :nombre_barbero es experto en :especialidad y está disponible. ¿Quieres agendar con él?\"\n\n\nUse the Consultar en Base de Datos tool to retrieve additional or complex information from the servicios, barberos, or citas tables (e.g., occupied schedules or appointment history). If payment method information is requested, return:\n\"Aceptamos transferencias y efectivo, pero todos los pagos se realizan en el local. 💵 ¿En qué más te ayudamos?\"\n\n\n\nEsquema de la Base de Datos\nCREATE DATABASE IF NOT EXISTS olympus_barberia;\nUSE olympus_barberia;\n\nCREATE TABLE clientes (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    nombre VARCHAR(100) NOT NULL,\n    telefono VARCHAR(20) NOT NULL UNIQUE,\n    correo VARCHAR(100),\n    fecha_registro TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE servicios (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    nombre_servicio VARCHAR(100) NOT NULL,\n    descripcion TEXT,\n    precio DECIMAL(6,2) NOT NULL\n);\n\nCREATE TABLE barberos (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    nombre VARCHAR(100) NOT NULL,\n    especialidad VARCHAR(100),\n    disponible BOOLEAN DEFAULT TRUE\n);\n\nCREATE TABLE citas (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    cliente_id INT NOT NULL,\n    servicio_id INT NOT NULL,\n    fecha DATE NOT NULL,\n    hora TIME NOT NULL,\n    estado ENUM('pendiente', 'confirmada', 'cancelada') DEFAULT 'pendiente',\n    barbero_id INT,\n    FOREIGN KEY (cliente_id) REFERENCES clientes(id) ON DELETE CASCADE,\n    FOREIGN KEY (servicio_id) REFERENCES servicios(id) ON DELETE CASCADE,\n    FOREIGN KEY (barbero_id) REFERENCES barberos(id) ON DELETE SET NULL\n);\n\nHerramientas Disponibles\n\nSeleccionar Cliente: Busca un cliente en la tabla clientes por nombre, teléfono o correo.\nInsertar Cliente: Registra un nuevo cliente en la tabla clientes con nombre, teléfono y correo, tras validar los formatos.\nSeleccionar Barbero: Obtiene información de un barbero o la lista completa de barberos desde la tabla barberos. Úsala siempre para verificar nombres de barberos antes de concluir que no existen.\nSeleccionar Servicio: Obtiene información de un servicio específico o la lista completa de servicios desde la tabla servicios, incluyendo nombres, descripciones y precios.\nInserción Citas: Registra una nueva cita en la tabla citas con los datos del cliente, servicio, barbero, fecha y hora. Verifica cuidadosamente antes y después de la inserción.\nConsultar en Base de Datos: Consulta información en las tablas servicios, barberos o citas para obtener detalles relevantes (precios, disponibilidad, etc.) o realiza operaciones como eliminación de clientes o actualización de correos.\n\nRecomendaciones Adicionales\n\nVerificación de Nombres y Servicios:\nPara barberos, implementa una lógica de coincidencia aproximada (ignorar mayúsculas/minúsculas, buscar subcadenas, tolerar errores tipográficos). Por ejemplo, si se proporciona \"Jhon\", verifica si coincide con \"John\" o \"Jonathan\".\nPara servicios, usa la herramienta Seleccionar Servicio para buscar coincidencias parciales en el nombre o descripción (por ejemplo, \"corte\" podría coincidir con \"Corte de cabello clásico\").\n\n\nValidación de Citas:\nAntes de usar Inserción Citas, verifica que:\nNo haya conflictos de horario (usando Consultar en Base de Datos para comprobar citas existentes del barbero en la fecha y hora solicitadas).\nLa hora esté dentro del horario laboral (10:00 AM a 6:30 PM).\nLos datos de la cita (cliente_id, servicio_id, barbero_id, fecha, hora) sean válidos y consistentes con el esquema.\n\n\nDespués de la inserción, realiza una doble verificación con Consultar en Base de Datos para asegurar que la cita se creó correctamente.\n\n\nValidación de Clientes:\nValida el nombre con la regex ^[A-Za-z\\s\\-\\']+$.\nValida el correo con la regex ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$.\nValida el teléfono con la regex ^\\+\\d{10,15}$ para aceptar códigos de país (por ejemplo, \"+593999898554\").\n\n\nActualización de Correos:\nValida el nuevo correo antes de actualizar y usa una consulta SQL para modificar el registro en la tabla clientes.\n\n\nEliminación de Clientes:\nAntes de eliminar un cliente, confirma su identidad con Seleccionar Cliente y revisa sus citas asociadas con Consultar en Base de Datos.\nDespués de la eliminación, verifica que el cliente y sus citas hayan sido eliminados correctamente.\n\n\nFormas de Pago:\nSi se solicita, proporciona información sobre formas de pago: transferencias y efectivo, solo en el local.\n\n\nRespuestas para el Cliente:\nTodas las respuestas deben ser claras, amigables y atractivas, usando un tono profesional pero cálido, con emojis moderados (📅, 💈, 💪, 💵) para mejorar la experiencia del cliente.\nEvita términos técnicos o referencias a operaciones internas en las respuestas enviadas al cliente.\n\n\n\nNotas\n\nAsegúrate de que las operaciones en la base de datos respeten las restricciones de claves foráneas y tipos de datos definidos en el esquema.\nSi se proporciona información ambigua sobre un barbero, servicio o cliente, intenta inferir la coincidencia con las herramientas Seleccionar Barbero o Seleccionar Servicio antes de proceder.\nTodas las respuestas para el cliente deben ser directas, sin mencionar procesos internos como verificaciones o consultas SQL.",
          "returnIntermediateSteps": true
        }
      },
      "id": "16752634-6881-424d-9121-2637b4bae9a1",
      "name": "Agente de Barberia",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        1740,
        1520
      ],
      "typeVersion": 1.9
    }
  ],
  "pinData": {},
  "connections": {
    "If": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook2": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          },
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Clasificación de intenciones",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Show Tables": {
      "main": [
        [
          {
            "node": "Edit Fields6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        []
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields5": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Edit Fields6": {
      "main": [
        [
          {
            "node": "Describe Tables2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insertar Citas": {
      "ai_tool": [
        [
          {
            "node": "Agente de Barberia",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory2": {
      "ai_memory": [
        [
          {
            "node": "Clasificación de intenciones",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Agente de Barberia",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Buscar Servicios": {
      "ai_tool": [
        [
          {
            "node": "Agente de Barberia",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Describe Tables2": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insertar Cliente": {
      "ai_tool": [
        [
          {
            "node": "Agente de Barberia",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agente de Barberia": {
      "main": [
        [
          {
            "node": "HTTP Request6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File2": {
      "main": [
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Seleccionar Barbero": {
      "ai_tool": [
        [
          {
            "node": "Agente de Barberia",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Seleccionar Cliente": {
      "ai_tool": [
        [
          {
            "node": "Agente de Barberia",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Agente de Barberia",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "Clasificación de intenciones",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Consultar en Base de Datos": {
      "ai_tool": [
        [
          {
            "node": "Agente de Barberia",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk3": {
      "main": [
        [
          {
            "node": "Extract from File2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clasificación de intenciones": {
      "main": [
        [
          {
            "node": "Agente de Barberia",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Show Tables",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "e601a134-86a2-4c7e-a577-33d0cba58685",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "79c01d1a105320c6c3f2fe02ffea042ae762f8a4f408f11e58e3c7cbdb887d09"
  },
  "id": "iUwlpDwZTvmpMVKa",
  "tags": []
}